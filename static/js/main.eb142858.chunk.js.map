{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","concatTodos","userId","usersFromServer","find","App","useState","setTodos","setTitle","setUser","errorInput","setInputError","errorSelect","setSelectError","action","method","type","placeholder","value","onChange","e","target","defaultValue","v","Number","disabled","onClick","event","preventDefault","task","Math","max","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb142858.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../Types/User';\n\ntype UserProps = {\n  user: User,\n};\n\nexport const UserInfo = ({ user }: UserProps) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../Types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype TodoProps = {\n  todo: Todo,\n};\n\nexport const TodoInfo = ({ todo }: TodoProps) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import { Todo } from '../../Types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype TodoProps = {\n  todos: Todo[];\n};\n\nexport const TodoList = ({ todos }: TodoProps) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => <TodoInfo todo={{ ...todo }} key={todo.id} />)\n      }\n    </section>\n  );\n};\n","import './App.scss';\nimport { FormEventHandler, useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './Types/User';\nimport { Todo } from './Types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nexport const getUser = (userId: number): User => {\n  const foundUser = usersFromServer.find(user => {\n    return user.id === userId;\n  });\n\n  return foundUser as User;\n};\n\nexport const concatTodos: Todo[] = todosFromServer.map(todo => {\n  return ({\n    ...todo,\n    user: getUser(todo.userId),\n  });\n});\n\nexport const App = () => {\n  const [todos, setTodos] = useState(concatTodos);\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState<User | null>(null);\n  const [completed] = useState(false);\n  const [errorInput, setInputError] = useState(false);\n  const [errorSelect, setSelectError] = useState(false);\n\n  const handleChangeTitle:\n  React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    setTitle(e.target.value);\n    setInputError(false);\n  };\n\n  const handleChangeUser:\n  React.ChangeEventHandler<HTMLSelectElement> = (e) => {\n    setUser(usersFromServer\n      .find(v => v.id === Number(e.target.value)) || null);\n    setSelectError(false);\n  };\n\n  const addTodo: FormEventHandler<HTMLButtonElement> = (event) => {\n    event.preventDefault();\n\n    if (!user && !title) {\n      setSelectError(true);\n      setInputError(true);\n\n      return;\n    }\n\n    if (!user) {\n      setSelectError(true);\n\n      return;\n    }\n\n    if (!title) {\n      setInputError(true);\n\n      return;\n    }\n\n    const task: Todo = {\n      id: Math.max(...todos.map((todo) => todo.id)) + 1,\n      title,\n      userId: user.id,\n      completed,\n      user,\n    };\n\n    setTodos([...todos, task]);\n    setTitle('');\n    setUser(null);\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n\n        <form\n          action=\"/api/todos\"\n          method=\"POST\"\n        >\n          <div className=\"field\">\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Title\"\n              value={title}\n              onChange={handleChangeTitle}\n            />\n            {errorInput && <span className=\"error\">Please enter a title</span>}\n\n          </div>\n\n          <div className=\"field\">\n            <select\n              data-cy=\"userSelect\"\n              value={user?.id || 0}\n              defaultValue={0}\n              onChange={handleChangeUser}\n            >\n              <option value={0} disabled>Choose a user</option>\n              {usersFromServer.map(v => {\n                return <option key={v.id} value={v.id}>{v.name}</option>;\n              })}\n            </select>\n            {errorSelect && <span className=\"error\">Please choose a user</span>}\n\n          </div>\n\n          <button\n            type=\"submit\"\n            data-cy=\"submitButton\"\n            onClick={addTodo}\n          >\n            Add\n          </button>\n        </form>\n\n        <TodoList todos={todos} />\n      </div>\n    </>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}